using Core.DAO.RecursosHumanos.Desempeno;
using Core.DTO.Principal.Generales;
using Core.Entity.RecursosHumanos.Desempeno;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Core.Entity.Principal.Usuarios;
<<<<<<< Updated upstream
using Core.DTO;
=======
using System.Web;
>>>>>>> Stashed changes

namespace Core.Service.RecursosHumanos.Desempeno
{
    public class DesempenoService : IDesempenoDAO
    {
        #region Init
        public IDesempenoDAO d_desempeno { get; set; }
        public IDesempenoDAO Desempeno
        {
            get { return d_desempeno; }
            set { d_desempeno = value; }
        }
        public DesempenoService(IDesempenoDAO Desempeno)
        {
            this.Desempeno = Desempeno;
        }
        #endregion        
        #region Meta
        public bool guardarMeta(tblRH_ED_DetMetas meta)
        {
            return d_desempeno.guardarMeta(meta);
        }
        public bool guardarMeta(List<tblRH_ED_DetMetas> lst)
        {
            return d_desempeno.guardarMeta(lst);
        }
        public bool eliminarMeta(int id)
        {
            return d_desempeno.eliminarMeta(id);
        }
        public List<tblRH_ED_DetMetas> getLstMetaPorProceso(int idProceso, int usuarioID)
        {
            return d_desempeno.getLstMetaPorProceso(idProceso, usuarioID);
        }
        public tblRH_ED_DetMetas getMeta(int idMeta)
        {
            return d_desempeno.getMeta(idMeta);
        }
        #endregion
        #region Evaluacion
        public tblRH_ED_DetObservacion getObservacion(int idEvaluacion, int idMeta)
        {
            return d_desempeno.getObservacion(idEvaluacion, idMeta);
        }
        public bool eliminarEvidencia(int id)
        {
            return d_desempeno.eliminarEvidencia(id);
        }
        public bool metaEvidenciaGuardar(tblRH_ED_DetObservacion eva, List<HttpPostedFileBase> lstArchivo)
        {
            return d_desempeno.metaEvidenciaGuardar(eva, lstArchivo);
        }
        #endregion
        #region Semaforo
        public List<tblRH_ED_CatSemaforo> getLstSemaforo(int idProceso)
        {
            return d_desempeno.getLstSemaforo(idProceso);
        }
        #endregion
        #region Empleados
        public List<tblRH_ED_Empleado> CargarTblEmpleados(bool estatus)
        {
            return d_desempeno.CargarTblEmpleados(estatus);
        }
        public List<tblP_Usuario> getEmpleados(string term)
        {
            return d_desempeno.getEmpleados(term);
        }
        public List<tblRH_ED_Empleado> getEmpleadosDesempeno(string term)
        {
            return d_desempeno.getEmpleadosDesempeno(term);
        }
        public bool GuardarEmpleado(int empleadoID, int jefeID, int tipo)
        {
            return d_desempeno.GuardarEmpleado(empleadoID, jefeID, tipo);
        }
        #endregion
        #region combobox
        public List<ComboDTO> getCboProceso()
        {
            return d_desempeno.getCboProceso();
        }
        public List<ComboDTO> getCboEvaluacionPorProceso(int idProceso)
        {
            return d_desempeno.getCboEvaluacionPorProceso(idProceso);
        }
        public List<ComboDTO> getCboEstrategias()
        {
            return d_desempeno.getCboEstrategias();
        }
        #endregion
        #region Calendario
        public Respuesta GetEvaluaciones(int? idUsuarioVercomo)
        {
            return d_desempeno.GetEvaluaciones(idUsuarioVercomo);
        }
        #endregion
    }
}
