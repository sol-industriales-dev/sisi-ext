<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no, shrink-to-fit=no">
    <title>Annotations - .NET Core</title>

    <link href="~/css/viewer.css" rel="stylesheet" />

    <link href="~/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/jquery-ui.min.css" rel="stylesheet" />

    <link href="~/scripts/dropzone/basic.css" rel="stylesheet" />
    <link href="~/scripts/dropzone/dropzone.css" rel="stylesheet" />

    <style>
        #divDocViewer {
            width: 100%;
            border-radius: 6px;
            background-color: whitesmoke;
            border: 1px grey;
            margin-top: 10px;
        }

        /* IMP: This css is required to avoid bootstrap css shrinking the main viewer */

        .row {
            margin-right: 0;
            margin-left: 0
        }
      
        /* end css */

        .loader {
            border: 5px solid #f3f3f3;
            border-top: 5px solid #3498db;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 2s linear infinite;
        }

        @@keyframes spin {
            0% {
                transform: rotate(0);
            }

            100% {
                transform: rotate(360deg);
            }
        }

        .selectedAnn {
            background-image: url(/images/selected.png);
            background-repeat: no-repeat;
            background-position: 50% 50%;
            border: solid 1px Yellow;
        }

    </style>

</head>

<body>

    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="https://doconut.com" target="_blank">Annotations .NET Core</a>&nbsp;<div class="loader"></div>
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarResponsive" aria-controls="navbarResponsive" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarResponsive">
                 @await Html.PartialAsync("_Menu")
            </div>
        </div>
    </nav>


    <!-- Page Content -->

    <div class="row">

        <div class="col-lg-12 text-center">
            <div id="divDocViewer">
                <div id="div_ctlDoc"></div>
            </div>
        </div>
    </div>


    <!-- File upload modal -->
    @await Html.PartialAsync("_FileUpload")

    <!-- Annotation properties modal -->
    @await Html.PartialAsync("_AnnProperties")


    <script src="~/scripts/jquery.min.js"></script>
    <script src="~/scripts/jquery-ui.min.js"></script>

    <script src="~/scripts/bootstrap.min.js"></script>

    <script src="~/scripts/splitter.js"></script>
    <script src="~/scripts/docViewer.js"></script>
    <script src="~/scripts/documentLinks.js"></script>

    <script src="~/scripts/annotation.js"></script>
    <script src="~/scripts/raphael.js"></script>
    <script src="~/scripts/annotation-helper.js"></script>

    <script type="text/javascript" src="~/scripts/dropzone/dropzone.js"></script>

    <script>
        Dropzone.autoDiscover = false;

        var objctlDoc = null;
        var globalToken = "";
        var loader = $(".loader");
        var isMobile = false;
        var resizing = false;
        var docViewerDiv = $("#divDocViewer");
        var w = 0;
        var h = 0;

        loader.hide();
        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
            isMobile = true;
        }

        function ctlDoc_OnViewerBusy() {
            loader.show();
        }

        function ctlDoc_OnViewerReady() {
            loader.hide();
        }

        function Resize(orientation) {

            if (resizing) { return; }

            resizing = true;

            w = document.documentElement.clientWidth;
            h = document.documentElement.clientHeight;


            var xdec = 35;
            var ydec = 95;

            if (isMobile) {
                xdec = 30;
                ydec = 80;

                if (typeof orientation !== 'undefined') {
                    if (orientation === "landscape") {
                        w = document.documentElement.clientHeight;
                        h = document.documentElement.clientWidth;
                    }
                }
            }

            docViewerDiv.width(w - xdec);
            docViewerDiv.height(h - ydec);

            SetThumbs();
            resizing = false;
        }

        function SetThumbs() {
            try {
                objctlDoc.HideThumbs(true);
                objctlDoc.HideThumbs(false);
            } catch (exception) {

            }
        }

        function OpenDocument(fileName) {

            loader.show();

            $.ajax({
                type: "POST",
                cache: false,
                async: true,
                url: "/Home/OpenDocument?fileName=" + fileName,
                success: function (data) {
		    globalToken = data;
                    objctlDoc.View(data);
                },
                error: function (err) {
                    alert("Unable to open document. Error: " + err.responseText);
                    loader.hide();
                }
            });
        }

        $(window).on("load", function () {
            objctlDoc = $("#div_ctlDoc").docViewer(
                {
                    showThumbs: true,
                    autoFocus: true,
                    autoPageFocus: false,
                    pageZoom: 70,
                    zoomStep: 10,
                    maxZoom: 200,
                    format: 'png',
                    FitType: '',
                    debugMode: true,
                    showToolTip: false,
                    cacheEnabled: false,
                    autoLoad: false,
                    toolTipPageText: 'Page ',
                    BasePath: '/',
                    ResPath: 'images',
                    largeDoc: true,
                    showHyperlinks: true,
                    fixedZoom: true,
                    fixedZoomPercent: 100,
                    fixedZoomPercentMobile: 75
                });

            Resize();
        });


        if (isMobile) {
            $(window).on("orientationchange", function (event) { Resize(event.orientation); });
        }
        else {
            $(window).on("resize", function () { Resize(); });
        }


        function GoFS() {

            if (
                document.fullscreenElement ||
                document.webkitFullscreenElement ||
                document.mozFullScreenElement ||
                document.msFullscreenElement
            ) {
                if (document.exitFullscreen) {
                    document.exitFullscreen();
                } else if (document.mozCancelFullScreen) {
                    document.mozCancelFullScreen();
                } else if (document.webkitExitFullscreen) {
                    document.webkitExitFullscreen();
                } else if (document.msExitFullscreen) {
                    document.msExitFullscreen();
                }
            } else {
                var element = $('#divDocViewer').get(0);

                if (element.requestFullscreen) {
                    element.requestFullscreen();
                } else if (element.mozRequestFullScreen) {
                    element.mozRequestFullScreen();
                } else if (element.webkitRequestFullscreen) {
                    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);
                } else if (element.msRequestFullscreen) {
                    element.msRequestFullscreen();
                }
            }
        }

        function OpenUpload() {
            $('#myModal').modal('show');
        }

        $(document).ready(function () {

            $("#dropZoneForm").dropzone({
                url: "/Home/UploadFile",
                maxFiles: 1,
                paramName: "file",
                uploadMultiple: false,
                maxFilesize: 20,
                acceptedFiles:
                    ".doc,.docx,.docm,.odt,.xls,.xlsx,.xlsm,.ods,.csv,.ppt,.pptx,.odp,.vsd,.vsdx,.mpp,.mppx,.pdf,.tif,.tiff,.dwg,.dxf,.dgn,.xps,.psd,.jpg,.jpeg,.jpe,.png,.bmp,.gif,.eml,.msg,.txt,.rtf,.xml,.epub,.svg,.html,.htm,.mht,.dcn,.dcm,.dng,.ico,.eps,.tga,.webp,.cdr,.cmx",
                addRemoveLinks: false,
                init: function () {
                    var th = this;
                    this.on("success",
                        function (file, response) {

                            OpenDocument(response);
                            $('#myModal').modal('hide');

                        }),
                        this.on("error",
                            function (file, errorMessage, c) {
                                alert("Error uploading document [[" +
                                    file.name +
                                    "]]. Technical team has been notified.");
                            }),
                        this.on("queuecomplete",
                            function () {
                                setTimeout(function () {
                                    th.removeAllFiles();
                                },
                                    3000);
                            });
                }
            });
        });

    </script>


</body>
</html>